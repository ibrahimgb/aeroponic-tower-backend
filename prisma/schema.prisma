// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                     @id @default(autoincrement())
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  email                 String                  @unique
  hash                  String?
  firstName             String?
  lastName              String?
  phoneNumber           Int?
  usersOnAeroponicTower UsersOnAeroponicTower[]
  avatar                String?
  groups                UsersOnGroup[]
  mainAdminOf Int?
  group Group?

  @@map("users")
}

model UsersOnGroup {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  @@id([userId, groupId])
}

model Group {
  id    Int            @id @default(autoincrement())
  name  String?
  users UsersOnGroup[]
  adminId Int @unique  
  user   User @relation(fields: [adminId], references: [id])
}

model PumpInterval {
  id          Int     @id @default(autoincrement())
  timeOff     Int     @default(25)
  timeOn      Int     @default(15)
  description String?

  AeroponicTower AeroponicTower[]
}

model UsersOnAeroponicTower {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  aeroponicTower   AeroponicTower @relation(fields: [aeroponicTowerId], references: [id])
  aeroponicTowerId String

  @@id([userId, aeroponicTowerId])
}

model AeroponicTower {
  id                    String                  @id @unique
  name                  String?
  size                  Int?                    @default(8)
  content               String?                 @default("nothing yet")
  SensorData            SensorData[]
  pumpIntervalID        Int                     @default(1)
  PumpInterval          PumpInterval            @relation(fields: [pumpIntervalID], references: [id])
  usersOnAeroponicTower UsersOnAeroponicTower[]
  image                 String?
  dayStarted            DateTime                @default(now())
  daysToHarvest         Int                     @default(10)
  //PumpIntervalID Int
  //pumpInterval   PumpInterval @relation(fields: [PumpIntervalID], references: [id])
}

model SensorData {
  aeroponicTowerID String

  envTemp     Float
  envHumidity Float

  insideTemp     Float
  insideHumidity Float

  waterTemperature Float

  uvLight             Float
  waterNeedsRefilling Boolean
  pumpIsWorking       Boolean
  timeCaptured        DateTime
  aeroponicTower      AeroponicTower @relation(fields: [aeroponicTowerID], references: [id])

  @@id([timeCaptured, aeroponicTowerID])
}
